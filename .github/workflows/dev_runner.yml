# dev_runner.yml

name: Manual Step Runner (with fallback, ID-based + Parquet)

on:
  workflow_dispatch:
    inputs:
      step:
        description: "Hangi adƒ±mƒ± √ßalƒ±≈ütƒ±rayƒ±m?"
        type: choice
        options:
          - full
          - update_crime
          - update_911
          - update_311
          - update_population
          - update_bus
          - update_train
          - update_poi
          - update_police_gov
          - update_weather
          - stacking
          - forecast_train
          - forecast_predict
          - patrol
        default: full
      persist:
        description: "√áƒ±ktƒ±yƒ± nasƒ±l saklayalƒ±m?"
        type: choice
        options: [artifact, commit, none]
        default: artifact
      py:
        description: "Python s√ºr√ºm√º"
        type: choice
        options: ["3.11","3.10"]
        default: "3.11"

permissions:
  contents: write

env:
  CRIME_DATA_DIR: crime_prediction_data_per
  GEOID_LEN: "11"
  SOCS_APP_TOKEN: ${{ secrets.SOCS_APP_TOKEN }}
  PYTHONUNBUFFERED: "1"

  # üî¥ ID-bazlƒ± + Parquet kipleri
  USE_PARQUET: "1"
  ID_BASED: "1"
  LABEL_STYLE: "legacy01"          # Y_label 0/1 eski usul

  # stacking & forecast i√ßin varsayƒ±lan yollar
  STACKING_DATASET: ${{ env.CRIME_DATA_DIR }}/sf_crime_grid_full_labeled.parquet
  MODEL_DIR: ${{ env.CRIME_DATA_DIR }}/models_cat
  FORECAST_OUT: ${{ env.CRIME_DATA_DIR }}/sf_forecast_cat
  HORIZONS: "24h,7d,30d,90d,365d"

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with LFS)
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Ensure LFS objects
        run: |
          git lfs install
          git lfs pull
          echo "Repo k√∂k:"; ls -lah
          echo "CRIME_DATA_DIR (${CRIME_DATA_DIR}):"; ls -lah "${CRIME_DATA_DIR}" || true

      # ---- En son BA≈ûARILI full pipeline artifact'ƒ±nƒ± indir (fallback i√ßin) ----
      - name: Restore last-good snapshot (from Full SF Crime Pipeline)
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: full_pipeline.yml
          workflow_conclusion: success
          name: sf-crime-pipeline-output
          path: last_good
        continue-on-error: true

      - name: Show last_good snapshot (if any)
        run: |
          if [ -d last_good ]; then
            echo "last_good/ i√ßeriƒüi:"
            ls -lah last_good || true
            echo "last_good/${CRIME_DATA_DIR}/ i√ßeriƒüi:"
            ls -lah "last_good/${CRIME_DATA_DIR}" || true
          else
            echo "last_good/ yok (daha √∂nce ba≈üarƒ±lƒ± full pipeline artifact bulunamadƒ±)."
          fi

      - name: Ensure data dir
        run: mkdir -p "${CRIME_DATA_DIR}"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ github.event.inputs.py }}
          cache: "pip"

      - name: Install deps (parquet + geo + ML)
        run: |
          python -m pip install -U pip wheel setuptools
          pip install -U pandas numpy polars pyarrow requests holidays scipy scikit-learn joblib
          pip install -U lightgbm xgboost || true
          # geo (gerekebilecek adƒ±mlar i√ßin)
          pip install -U geopandas shapely pyproj pyogrio rtree || true

      - name: Sanity check inputs (√∂n-uyarƒ±)
        run: |
          echo "Se√ßili adƒ±m: ${{ github.event.inputs.step }}"
          echo "Mevcut dosyalar:"
          ls -lah
          echo "CRIME_DATA_DIR (${CRIME_DATA_DIR})/"
          ls -lah "${CRIME_DATA_DIR}" || true

      # ---- √áALI≈ûTIRMA (Hata ‚Üí fallback ‚Üí devam) ----
      - name: Run selected step (with parquet-aware fallback)
        shell: bash
        env:
          USE_PARQUET: ${{ env.USE_PARQUET }}
          ID_BASED:    ${{ env.ID_BASED }}
          LABEL_STYLE: ${{ env.LABEL_STYLE }}
          STACKING_DATASET: ${{ env.STACKING_DATASET }}
          MODEL_DIR:   ${{ env.MODEL_DIR }}
          FORECAST_OUT: ${{ env.FORECAST_OUT }}
          HORIZONS:    ${{ env.HORIZONS }}
        run: |
          set -uo pipefail

          copy_fallback() {
            mkdir -p "${CRIME_DATA_DIR}"
            if [ -d "last_good/${CRIME_DATA_DIR}" ]; then
              cp -f "last_good/${CRIME_DATA_DIR}"/*.parquet "${CRIME_DATA_DIR}/" 2>/dev/null || true
              cp -f "last_good/${CRIME_DATA_DIR}"/*.csv     "${CRIME_DATA_DIR}/" 2>/dev/null || true
              cp -rf "last_good/${CRIME_DATA_DIR}/sf_forecast_cat" "${CRIME_DATA_DIR}/" 2>/dev/null || true
              cp -f "last_good/${CRIME_DATA_DIR}"/*.geojson "${CRIME_DATA_DIR}/" 2>/dev/null || true
              echo "‚ÑπÔ∏è Fallback: last_good/${CRIME_DATA_DIR} ‚Üí ${CRIME_DATA_DIR}/ kopyalandƒ±."
            elif [ -d last_good ]; then
              cp -f last_good/*.parquet "${CRIME_DATA_DIR}/" 2>/dev/null || true
              cp -f last_good/*.csv     "${CRIME_DATA_DIR}/" 2>/dev/null || true
              cp -rf last_good/sf_forecast_cat "${CRIME_DATA_DIR}/" 2>/dev/null || true
              cp -f last_good/*.geojson "${CRIME_DATA_DIR}/" 2>/dev/null || true
              echo "‚ÑπÔ∏è Fallback: last_good ‚Üí ${CRIME_DATA_DIR}/ kopyalandƒ±."
            else
              echo "‚ùå Fallback m√ºmk√ºn deƒüil: last_good/ yok."
            fi
          }

          run_or_fallback() {
            local label="$1"
            shift
            echo "‚ñ∂Ô∏è ${label} ba≈ülƒ±yor‚Ä¶"
            if bash -lc "$*"; then
              echo "‚úÖ ${label} tamam."
            else
              echo "‚ö†Ô∏è ${label} FAILED. Falling back to last_good/ and continuing‚Ä¶"
              copy_fallback
            fi
          }

          run_full() {
            run_or_fallback "01 update_crime"        "python -u update_crime.py"
            run_or_fallback "02 update_911"          "python -u update_911.py"
            run_or_fallback "03 update_311"          "if [ -f update_311.py ]; then python -u update_311.py; else python -u scripts/update_311.py; fi"
            run_or_fallback "04 update_population"   "python -u update_population.py"
            run_or_fallback "05 update_bus"          "python -u update_bus.py"
            run_or_fallback "06 update_train"        "python -u update_train.py"
            run_or_fallback "07 update_poi"          "if [ -f update_poi.py ]; then python -u update_poi.py; elif [ -f pipeline_make_sf_crime_06.py ]; then python -u pipeline_make_sf_crime_06.py; else echo 'POI adƒ±mƒ± yok'; exit 2; fi"
            run_or_fallback "08 update_police_gov"   "if [ -f update_police_gov.py ]; then python -u update_police_gov.py; elif [ -f scripts/enrich_police_gov_06_to_07.py ]; then python -u scripts/enrich_police_gov_06_to_07.py; else echo 'Polis/Gov adƒ±mƒ± yok'; exit 2; fi"
            run_or_fallback "09 update_weather"      "if [ -f update_weather.py ]; then python -u update_weather.py; else python -u scripts/update_weather.py; fi"
            run_or_fallback "10 stacking"            "python -u stacking_risk_pipeline.py"
            run_or_fallback "11 forecast_train"      "python -u scripts/forecast_train.py"
            run_or_fallback "12 forecast_predict"    "python -u scripts/forecast_predict.py"
            run_or_fallback "13 patrol"              "python -u scripts/post_patrol.py --input-parquet '${CRIME_DATA_DIR}/risk_hourly.parquet' --output-parquet '${CRIME_DATA_DIR}/patrol_recs_multi.parquet'"
          }

          STEP="${{ github.event.inputs.step }}"
          case "$STEP" in
            full) run_full ;;
            update_crime)        run_or_fallback "update_crime"        "python -u update_crime.py" ;;
            update_911)          run_or_fallback "update_911"          "python -u update_911.py" ;;
            update_311)          run_or_fallback "update_311"          "if [ -f update_311.py ]; then python -u update_311.py; else python -u scripts/update_311.py; fi" ;;
            update_population)   run_or_fallback "update_population"   "python -u update_population.py" ;;
            update_bus)          run_or_fallback "update_bus"          "python -u update_bus.py" ;;
            update_train)        run_or_fallback "update_train"        "python -u update_train.py" ;;
            update_poi)          run_or_fallback "update_poi"          "if [ -f update_poi.py ]; then python -u update_poi.py; elif [ -f pipeline_make_sf_crime_06.py ]; then python -u pipeline_make_sf_crime_06.py; else echo 'POI adƒ±mƒ± yok'; exit 2; fi" ;;
            update_police_gov)   run_or_fallback "update_police_gov"   "if [ -f update_police_gov.py ]; then python -u update_police_gov.py; elif [ -f scripts/enrich_police_gov_06_to_07.py ]; then python -u scripts/enrich_police_gov_06_to_07.py; else echo 'Polis/Gov adƒ±mƒ± yok'; exit 2; fi" ;;
            update_weather)      run_or_fallback "update_weather"      "if [ -f update_weather.py ]; then python -u update_weather.py; else python -u scripts/update_weather.py; fi" ;;
            stacking)            run_or_fallback "stacking"            "python -u stacking_risk_pipeline.py" ;;
            forecast_train)      run_or_fallback "forecast_train"      "python -u scripts/forecast_train.py" ;;
            forecast_predict)    run_or_fallback "forecast_predict"    "python -u scripts/forecast_predict.py" ;;
            patrol)              run_or_fallback "patrol"              "python -u scripts/post_patrol.py --input-parquet '${CRIME_DATA_DIR}/risk_hourly.parquet' --output-parquet '${CRIME_DATA_DIR}/patrol_recs_multi.parquet'" ;;
            *) echo "Bilinmeyen step: $STEP"; exit 2 ;;
          esac

      - name: Quick preview (parquet/csv ‚Äì ilk satƒ±rlar)
        run: |
          python - <<'PY'
          import os, glob
          import polars as pl
          d="${CRIME_DATA_DIR}"
          for f in ["sf_crime_grid_full_labeled.parquet","risk_hourly.parquet","patrol_recs_multi.parquet","sf_crime_08.parquet"]:
              p=os.path.join(d,f)
              if os.path.exists(p):
                  print("===",f,"==="); print(pl.scan_parquet(p).head(5).collect())
          PY
          echo "CSV quick heads:"
          head -n 5 "${CRIME_DATA_DIR}/sf_crime_08.csv" 2>/dev/null || true

      - name: Pack outputs
        run: |
          mkdir -p out
          cp -f ${CRIME_DATA_DIR}/*.parquet out/ 2>/dev/null || true
          cp -f ${CRIME_DATA_DIR}/*.csv     out/ 2>/dev/null || true
          cp -rf ${CRIME_DATA_DIR}/sf_forecast_cat out/ 2>/dev/null || true
          cp -f ${CRIME_DATA_DIR}/*.geojson out/ 2>/dev/null || true
          ls -lah out || true

      - name: Upload artifact (default)
        if: ${{ github.event.inputs.persist == 'artifact' }}
        uses: actions/upload-artifact@v4
        with:
          name: dev-run-${{ github.run_id }}
          path: out
          retention-days: 7
          if-no-files-found: warn

      - name: Commit & push (isteƒüe baƒülƒ±)
        if: ${{ github.event.inputs.persist == 'commit' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "üß™ Dev run (with fallback, parquet): ${{ github.event.inputs.step }} (#${{ github.run_id }}) [skip ci]" || echo "No changes"
          git push || echo "Nothing to push"
